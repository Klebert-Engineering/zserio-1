Checks: "-*,\
  bugprone-bool-pointer-implicit-conversion,\
#(generated test objects break this rule)  bugprone-branch-clone,\
  bugprone-copy-constructor-init,\
  bugprone-dangling-handle,\
#(move constructors throws and we don't know how to prevent it)  bugprone-exception-escape,\
  bugprone-fold-init-type,\
#(generated test objects break this rule)  bugprone-forwarding-reference-overload,\
  bugprone-inaccurate-erase,\
  bugprone-incorrect-roundings,\
  bugprone-infinite-loop,\
  bugprone-integer-division,\
  bugprone-macro-repeated-side-effects,\
  bugprone-misplaced-operator-in-strlen-in-alloc,\
  bugprone-misplaced-pointer-arithmetic-in-alloc,\
#(generated expressions break this rule)  bugprone-misplaced-widening-cast,\
  bugprone-move-forwarding-reference,\
  bugprone-multiple-statement-macro,\
  bugprone-not-null-terminated-result,\
  bugprone-parent-virtual-call,\
  bugprone-posix-return,\
#(generated code breaks this rule)  bugprone-reserved-identifier,\
  bugprone-signed-char-misuse,\
  bugprone-sizeof-expression,\
  bugprone-spuriously-wake-up-functions,\
  bugprone-string-constructor,\
  bugprone-suspicious-enum-usage,\
  bugprone-suspicious-include,\
  bugprone-suspicious-memset-usage,\
  bugprone-suspicious-missing-comma,\
  bugprone-suspicious-semicolon,\
  bugprone-suspicious-string-compare,\
  bugprone-swapped-arguments,\
  bugprone-terminating-continue,\
  bugprone-too-small-loop-variable,\
  bugprone-undefined-memory-manipulation,\
#  bugprone-unhandled-self-assignment,\
  bugprone-unused-raii,\
  bugprone-unused-return-value,\
  bugprone-use-after-move,\
  bugprone-virtual-near-miss,\
  cert-dcl50-cpp,\
  cert-dcl58-cpp,\
  cert-env33-c,\
  cert-err52-cpp,\
#  cert-err58-cpp,\
  cert-flp30-c,\
  cert-mem57-cpp,\
  cert-msc50-cpp,\
  cert-oop57-cpp,\
  cert-oop58-cpp,\
  clang-analyzer-cplusplus.Move,\
  clang-analyzer-cplusplus.NewDeleteLeaks,\
  cppcoreguidelines-avoid-c-arrays,\
  cppcoreguidelines-avoid-goto,\
#  cppcoreguidelines-avoid-non-const-global-variables,\
#(sometimes doesn't make sense) cppcoreguidelines-init-variables,\
  cppcoreguidelines-interfaces-global-init,\
  cppcoreguidelines-macro-usage,\
  cppcoreguidelines-narrowing-conversions,\
  cppcoreguidelines-no-malloc,\
  cppcoreguidelines-pro-bounds-array-to-pointer-decay,\
#  cppcoreguidelines-pro-bounds-constant-array-index,\
  cppcoreguidelines-pro-bounds-pointer-arithmetic,\
#  cppcoreguidelines-pro-type-const-cast,\
  cppcoreguidelines-pro-type-cstyle-cast,\
#(parameters of parameterized objects)  cppcoreguidelines-pro-type-member-init,\
#(sql tables break this rule)  cppcoreguidelines-pro-type-reinterpret-cast,\
  cppcoreguidelines-pro-type-static-cast-downcast,\
  cppcoreguidelines-pro-type-union-access,\
  cppcoreguidelines-pro-type-vararg,\
  cppcoreguidelines-slicing,\
  cppcoreguidelines-special-member-functions,\
  fuchsia-multiple-inheritance,\
  google-build-explicit-make-pair,\
  google-build-namespaces,\
#  google-build-using-namespace,\
#  google-default-arguments,\
#(generated bitmasks break this rule)  google-explicit-constructor,\
  google-global-names-in-headers,\
  google-readability-casting,\
  google-runtime-int,\
  google-runtime-operator,\
  google-upgrade-googletest-case,\
#  hicpp-multiway-paths-covered,\
  hicpp-no-assembler,\
#(generated expressions break this rule)  hicpp-signed-bitwise,\
  misc-definitions-in-headers,\
  misc-misplaced-const,\
  misc-new-delete-overloads,\
#(recursive schemas break this rule)  misc-no-recursion,\
  misc-non-copyable-objects,\
#  misc-redundant-expression,\
  misc-throw-by-value-catch-by-reference,\
  misc-unconventional-assign-operator,\
  misc-unused-parameters,\
  modernize-avoid-bind,\
  modernize-deprecated-headers,\
  modernize-deprecated-ios-base-aliases,\
#  modernize-loop-convert,\
  modernize-make-shared,\
  modernize-make-unique,\
  modernize-redundant-void-arg,\
  modernize-replace-auto-ptr,\
  modernize-replace-random-shuffle,\
  modernize-shrink-to-fit,\
  modernize-use-bool-literals,\
  modernize-use-equals-default,\
  modernize-use-equals-delete,\
  modernize-use-nullptr,\
  modernize-use-override,\
#  modernize-use-using,\
  performance-faster-string-find,\
  performance-for-range-copy,\
  performance-implicit-conversion-in-loop,\
  performance-inefficient-algorithm,\
  performance-inefficient-string-concatenation,\
  performance-inefficient-vector-operation,\
#  performance-move-const-arg,\
  performance-no-automatic-move,\
  performance-trivially-destructible,\
  performance-type-promotion-in-math-fn,\
  performance-unnecessary-value-param,\
  portability-simd-intrinsics,\
#  readability-braces-around-statements,\
  readability-const-return-type,\
#(case-info which holds pointers to fields info breaks this rule)  readability-container-data-pointer,\
  readability-delete-null-pointer,\
  readability-deleted-default,\
  readability-identifier-naming,\
#(obfuscates code)  readability-implicit-bool-conversion,\
  readability-inconsistent-declaration-parameter-name,\
  readability-isolate-declaration,\
#  readability-make-member-function-const,\
  readability-misleading-indentation,\
  readability-misplaced-array-index,\
  readability-non-const-parameter,\
  readability-redundant-access-specifiers,\
  readability-redundant-control-flow,\
  readability-redundant-function-ptr-dereference,\
  readability-redundant-preprocessor,\
  readability-redundant-smartptr-get,\
#(obfuscates code)  readability-simplify-boolean-expr,\
  readability-simplify-subscript-expr,\
  readability-static-definition-in-anonymous-namespace,\
  readability-string-compare,\
  readability-uniqueptr-delete-release,\
#(generated expressions break this rule)  readability-uppercase-literal-suffix,\
  readability-use-anyofallof\
  "

CheckOptions:
  - key: IgnoredMacros
    value: "TEST,INSTANTIATE,BENCHMARK,MATCHER"
  - key: bugprone-signed-char-misuse.CharTypdefsToIgnore
    value: int8_t
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: true
  - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: true
  - key: readability-inconsistent-declaration-parameter-name.Strict
    value: true
  - key: readability-identifier-naming.UnionCase
    value: CamelCase

WarningsAsErrors: "*"
