package zserio.extension.common;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import zserio.tools.ExtensionParameters;
import zserio.tools.ZserioToolPrinter;

/**
 * Helper class which manages all files generated by an extension.
 *
 * Output file manager provides logic which decides whether it's needed to regenerate each
 * particular file based on its timestamp.
 */
public class OutputFileManager
{
    /**
     * Constructor.
     *
     * @param extensionParameters Extension parameters.
     */
    public OutputFileManager(ExtensionParameters extensionParameters)
    {
        lastModifiedSourceTime = extensionParameters.getLastModifiedTime();
        ignoreTimestamps = extensionParameters.getIgnoreTimestamps();
    }

    /**
     * Prints report about output files.
     */
    public void printReport()
    {
        int generated = 0;
        int skipped = 0;

        for (Map.Entry<File, Boolean> entry : outputFiles.entrySet())
        {
            if (entry.getValue())
                generated++;
            else
                skipped++;
        }

        ZserioToolPrinter.printMessage("  Generated " + generated + " files" +
                (skipped > 0 ? ", skipped " + skipped + " files" : ""));
    }

    /**
     * Adds new output file.
     *
     * If the output file already exists, it checks whether it should be regenerated based on its timestamp.
     *
     * @param outputFile Output file to add.
     *
     * @return True if the output file shall be newly generated.
     */
    public boolean addOutputFile(File outputFile)
    {
        final Boolean alreadyGenerated = outputFiles.get(outputFile);
        if (alreadyGenerated != null)
            return alreadyGenerated;

        final boolean generate = ignoreTimestamps ||
                lastModifiedSourceTime == 0L || lastModifiedSourceTime > outputFile.lastModified();

        outputFiles.put(outputFile, generate);

        return generate;
    }

    private final long lastModifiedSourceTime;
    private final boolean ignoreTimestamps;
    private final Map<File, Boolean> outputFiles = new HashMap<File, Boolean>();
}