// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zserio_service.proto

#ifndef PROTOBUF_zserio_5fservice_2eproto__INCLUDED
#define PROTOBUF_zserio_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_zserio_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsRequest();
  InitDefaultsResponse();
}
}  // namespace protobuf_zserio_5fservice_2eproto
namespace zserio_service_grpc {
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace zserio_service_grpc
namespace zserio_service_grpc {

// ===================================================================

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zserio_service_grpc.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string procName = 1;
  void clear_procname();
  static const int kProcNameFieldNumber = 1;
  const ::std::string& procname() const;
  void set_procname(const ::std::string& value);
  #if LANG_CXX11
  void set_procname(::std::string&& value);
  #endif
  void set_procname(const char* value);
  void set_procname(const char* value, size_t size);
  ::std::string* mutable_procname();
  ::std::string* release_procname();
  void set_allocated_procname(::std::string* procname);

  // bytes requestData = 2;
  void clear_requestdata();
  static const int kRequestDataFieldNumber = 2;
  const ::std::string& requestdata() const;
  void set_requestdata(const ::std::string& value);
  #if LANG_CXX11
  void set_requestdata(::std::string&& value);
  #endif
  void set_requestdata(const char* value);
  void set_requestdata(const void* value, size_t size);
  ::std::string* mutable_requestdata();
  ::std::string* release_requestdata();
  void set_allocated_requestdata(::std::string* requestdata);

  // @@protoc_insertion_point(class_scope:zserio_service_grpc.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr procname_;
  ::google::protobuf::internal::ArenaStringPtr requestdata_;
  mutable int _cached_size_;
  friend struct ::protobuf_zserio_5fservice_2eproto::TableStruct;
  friend void ::protobuf_zserio_5fservice_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zserio_service_grpc.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes responseData = 1;
  void clear_responsedata();
  static const int kResponseDataFieldNumber = 1;
  const ::std::string& responsedata() const;
  void set_responsedata(const ::std::string& value);
  #if LANG_CXX11
  void set_responsedata(::std::string&& value);
  #endif
  void set_responsedata(const char* value);
  void set_responsedata(const void* value, size_t size);
  ::std::string* mutable_responsedata();
  ::std::string* release_responsedata();
  void set_allocated_responsedata(::std::string* responsedata);

  // @@protoc_insertion_point(class_scope:zserio_service_grpc.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr responsedata_;
  mutable int _cached_size_;
  friend struct ::protobuf_zserio_5fservice_2eproto::TableStruct;
  friend void ::protobuf_zserio_5fservice_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request

// string procName = 1;
inline void Request::clear_procname() {
  procname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::procname() const {
  // @@protoc_insertion_point(field_get:zserio_service_grpc.Request.procName)
  return procname_.GetNoArena();
}
inline void Request::set_procname(const ::std::string& value) {
  
  procname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zserio_service_grpc.Request.procName)
}
#if LANG_CXX11
inline void Request::set_procname(::std::string&& value) {
  
  procname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zserio_service_grpc.Request.procName)
}
#endif
inline void Request::set_procname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  procname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zserio_service_grpc.Request.procName)
}
inline void Request::set_procname(const char* value, size_t size) {
  
  procname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zserio_service_grpc.Request.procName)
}
inline ::std::string* Request::mutable_procname() {
  
  // @@protoc_insertion_point(field_mutable:zserio_service_grpc.Request.procName)
  return procname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_procname() {
  // @@protoc_insertion_point(field_release:zserio_service_grpc.Request.procName)
  
  return procname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_procname(::std::string* procname) {
  if (procname != NULL) {
    
  } else {
    
  }
  procname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), procname);
  // @@protoc_insertion_point(field_set_allocated:zserio_service_grpc.Request.procName)
}

// bytes requestData = 2;
inline void Request::clear_requestdata() {
  requestdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::requestdata() const {
  // @@protoc_insertion_point(field_get:zserio_service_grpc.Request.requestData)
  return requestdata_.GetNoArena();
}
inline void Request::set_requestdata(const ::std::string& value) {
  
  requestdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zserio_service_grpc.Request.requestData)
}
#if LANG_CXX11
inline void Request::set_requestdata(::std::string&& value) {
  
  requestdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zserio_service_grpc.Request.requestData)
}
#endif
inline void Request::set_requestdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  requestdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zserio_service_grpc.Request.requestData)
}
inline void Request::set_requestdata(const void* value, size_t size) {
  
  requestdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zserio_service_grpc.Request.requestData)
}
inline ::std::string* Request::mutable_requestdata() {
  
  // @@protoc_insertion_point(field_mutable:zserio_service_grpc.Request.requestData)
  return requestdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_requestdata() {
  // @@protoc_insertion_point(field_release:zserio_service_grpc.Request.requestData)
  
  return requestdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_requestdata(::std::string* requestdata) {
  if (requestdata != NULL) {
    
  } else {
    
  }
  requestdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requestdata);
  // @@protoc_insertion_point(field_set_allocated:zserio_service_grpc.Request.requestData)
}

// -------------------------------------------------------------------

// Response

// bytes responseData = 1;
inline void Response::clear_responsedata() {
  responsedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::responsedata() const {
  // @@protoc_insertion_point(field_get:zserio_service_grpc.Response.responseData)
  return responsedata_.GetNoArena();
}
inline void Response::set_responsedata(const ::std::string& value) {
  
  responsedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zserio_service_grpc.Response.responseData)
}
#if LANG_CXX11
inline void Response::set_responsedata(::std::string&& value) {
  
  responsedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zserio_service_grpc.Response.responseData)
}
#endif
inline void Response::set_responsedata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  responsedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zserio_service_grpc.Response.responseData)
}
inline void Response::set_responsedata(const void* value, size_t size) {
  
  responsedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zserio_service_grpc.Response.responseData)
}
inline ::std::string* Response::mutable_responsedata() {
  
  // @@protoc_insertion_point(field_mutable:zserio_service_grpc.Response.responseData)
  return responsedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_responsedata() {
  // @@protoc_insertion_point(field_release:zserio_service_grpc.Response.responseData)
  
  return responsedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_responsedata(::std::string* responsedata) {
  if (responsedata != NULL) {
    
  } else {
    
  }
  responsedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), responsedata);
  // @@protoc_insertion_point(field_set_allocated:zserio_service_grpc.Response.responseData)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zserio_service_grpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zserio_5fservice_2eproto__INCLUDED
