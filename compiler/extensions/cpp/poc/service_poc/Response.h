/**
 * Automatically generated by Zserio C++ extension version 1.4.0-pre2.
 */

#ifndef SERVICE_TYPES_SIMPLE_SERVICE_RESPONSE_H
#define SERVICE_TYPES_SIMPLE_SERVICE_RESPONSE_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/PreWriteAction.h>
#include <zserio/Types.h>

namespace service_poc
{

class Response
{
public:
    Response() noexcept;

    explicit Response(
            uint64_t value_) :
            m_value_(value_)
    {
    }

    explicit Response(::zserio::BitStreamReader& in);

    ~Response() = default;

    Response(const Response&) = default;
    Response& operator=(const Response&) = default;

    Response(Response&&) = default;
    Response& operator=(Response&&) = default;

    uint64_t getValue() const;
    void setValue(uint64_t value_);

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t initializeOffsets(size_t bitPosition);

    bool operator==(const Response& other) const;
    int hashCode() const;

    void read(::zserio::BitStreamReader& in);
    void write(::zserio::BitStreamWriter& out,
            ::zserio::PreWriteAction preWriteAction = ::zserio::ALL_PRE_WRITE_ACTIONS);

private:
    uint64_t readValue(::zserio::BitStreamReader& in);

    uint64_t m_value_;
};

} // namespace service_poc

#endif // SERVICE_TYPES_SIMPLE_SERVICE_RESPONSE_H
