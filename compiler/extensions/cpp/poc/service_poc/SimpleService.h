/**
 * Automatically generated by Zserio C++ extension version 1.4.0-pre2.
 */

#ifndef SIMPLE_SERVICE_H
#define SIMPLE_SERVICE_H

#include <map>
#include <string>
#include <vector>
#include <functional>

#include <zserio_runtime/IService.h>

#include "service_poc/Request.h"
#include "service_poc/Response.h"

namespace service_poc
{

namespace SimpleService
{
    class Service : public ::zserio::IService
    {
    public:
        Service();
        virtual ~Service() = default;

        Service(const Service&) = default;
        Service& operator=(const Service&) = default;

        Service(Service&&) = default;
        Service& operator=(Service&&) = default;

        void callProcedure(const std::string& procName, const std::vector<uint8_t>& requestData,
                std::vector<uint8_t>& responseData) const override;

    private:
        // TODO: Should be const?
        virtual void powerOfTwoImpl(const Request& request, Response& response) const = 0;
        virtual void powerOfFourImpl(const Request& request, Response& response) const = 0;

        void powerOfTwoCall(const std::vector<uint8_t>& requestData, std::vector<uint8_t>& responseData) const;
        void powerOfFourCall(const std::vector<uint8_t>& requestData, std::vector<uint8_t>& responseData) const;

        using Procedure = std::function<void(const std::vector<uint8_t>& requestData,
                std::vector<uint8_t>& responseData)>;

        std::map<std::string, Procedure> m_procedureMap;
    };

    class Client
    {
    public:
        explicit Client(const ::zserio::IService& service);
        ~Client() = default;

        Client(const Client&) = default;
        Client& operator=(const Client&) = default;

        Client(Client&&) = default;
        Client& operator=(Client&&) = default;

        void callPowerOfTwo(Request& request, Response& response) const;
        void callPowerOfFour(Request& request, Response& response) const;

    private:
        const zserio::IService& m_service;
    };
} // namespace SimpleService

} // namespace service_poc

#endif // ifndef SIMPLE_SERVICE_H
