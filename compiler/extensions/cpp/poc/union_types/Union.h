/**
 * Automatically generated by Zserio C++ extension version 1.2.0.
 */

#ifndef UNION_H
#define UNION_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AnyHolder.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <zserio/OptionalHolder.h>
#include <zserio/Types.h>

#include "Structure.h"

class Union
{
public:
    Union();
    explicit Union(zserio::BitStreamReader& in);

    enum ChoiceTag
    {
        CHOICE_chars = 0,
        CHOICE_text = 1,
        UNDEFINED_CHOICE = -1
    };

    template <typename T>
    explicit Union(T&& value_, ChoiceTag tagHint = UNDEFINED_CHOICE)
    :   m_objectChoice(std::forward<T>(value_))
    {
        if (m_objectChoice.isType<std::vector<uint8_t>>() && (tagHint == UNDEFINED_CHOICE || tagHint == CHOICE_chars))
            m_choiceTag = CHOICE_chars;
        else if (m_objectChoice.isType<Structure>() && (tagHint == UNDEFINED_CHOICE || tagHint == CHOICE_text))
            m_choiceTag = CHOICE_text;
        else
            throw zserio::CppRuntimeException("No match in union Union!");
    }

    ChoiceTag choiceTag() const;

    std::vector<uint8_t>& getChars();
    const std::vector<uint8_t>& getChars() const;
    void setChars(const std::vector<uint8_t>& chars_);
    void setChars(std::vector<uint8_t>&& chars_);

    Structure& getText();
    const Structure& getText() const;
    void setText(const Structure& text_);
    void setText(Structure&& text_);

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t initializeOffsets(size_t bitPosition);

    bool operator==(const Union& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& in);
    void write(zserio::BitStreamWriter& out,
            zserio::PreWriteAction preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:
    ChoiceTag m_choiceTag;
    zserio::AnyHolder m_objectChoice;
};


#endif // UNION_H
