/**
 * Automatically generated by Zserio C++ extension version 1.2.0.
 */

#ifndef STRUCTURE_H
#define STRUCTURE_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <string>

#include <iostream>

class Structure
{
public:
    Structure();
    explicit Structure(zserio::BitStreamReader& in);

    Structure(const Structure& other) = default;
    Structure& operator=(const Structure& other) = default;
    Structure(Structure&& other) = default;
    Structure& operator=(Structure&& other) = default;

    template <typename ZSERIO_T_text>
    explicit Structure(ZSERIO_T_text&& text_)
    :   m_text_(std::forward<ZSERIO_T_text>(text_))
    {}

    explicit Structure(std::initializer_list<char> text_)
    :   m_text_(text_)
    {}

    std::string& getText();
    const std::string& getText() const;
    void setText(const std::string& text);
    void setText(std::string&& text);

    size_t bitSizeOf(size_t _bitPosition = 0) const;
    size_t initializeOffsets(size_t _bitPosition);

    bool operator==(const Structure& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& in);
    void write(zserio::BitStreamWriter& out,
            zserio::PreWriteAction preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:
    std::string m_text_;
};


#endif // STRUCTURE_H
