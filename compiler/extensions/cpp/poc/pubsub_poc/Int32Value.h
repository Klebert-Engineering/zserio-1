/**
 * Automatically generated by Zserio C++ extension version 1.4.0-pre2.
 */

#ifndef PUBSUB_POC_INT32_VALUE_H
#define PUBSUB_POC_INT32_VALUE_H

#include <type_traits>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/PreWriteAction.h>
#include <zserio/Types.h>

namespace pubsub_poc
{

class Int32Value
{
public:
    Int32Value() noexcept;

    explicit Int32Value(
            int32_t value_) :
            m_value_(value_)
    {
    }

    explicit Int32Value(::zserio::BitStreamReader& in);

    ~Int32Value() = default;

    Int32Value(const Int32Value&) = default;
    Int32Value& operator=(const Int32Value&) = default;

    Int32Value(Int32Value&&) = default;
    Int32Value& operator=(Int32Value&&) = default;

    int32_t getValue() const;
    void setValue(int32_t value_);

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t initializeOffsets(size_t bitPosition);

    bool operator==(const Int32Value& other) const;
    int hashCode() const;

    void read(::zserio::BitStreamReader& in);
    void write(::zserio::BitStreamWriter& out,
            ::zserio::PreWriteAction preWriteAction = ::zserio::ALL_PRE_WRITE_ACTIONS);

private:
    int32_t readValue(::zserio::BitStreamReader& in);

    int32_t m_value_;
};

} // namespace pubsub_poc

#endif // PUBSUB_POC_INT32_VALUE_H
