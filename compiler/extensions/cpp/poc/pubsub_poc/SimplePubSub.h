/**
 * Automatically generated by Zserio C++ extension version 1.4.0-pre2.
 */

#ifndef SIMPLE_PUB_SUB_H
#define SIMPLE_PUB_SUB_H

#include <functional>
#include <string>
#include <vector>
#include <map>

#include "zserio_runtime/IPubSubClient.h"

#include "pubsub_poc/UInt64Value.h"
#include "pubsub_poc/Int32Value.h"
#include "pubsub_poc/BoolValue.h"

namespace pubsub_poc
{

class SimplePubSub
{
public:
    explicit SimplePubSub(::zserio::IPubSubClient& pubSubClient);
    ~SimplePubSub() = default;

    SimplePubSub(const SimplePubSub&) = default;
    SimplePubSub& operator=(const SimplePubSub&) = default;

    SimplePubSub(SimplePubSub&&) = default;
    SimplePubSub& operator=(SimplePubSub&&) = default;

    void publishUInt64Value(::pubsub_poc::UInt64Value& object, void* context = nullptr) const;

    void publishInt32ValueOut(::pubsub_poc::Int32Value& object, void* context = nullptr) const;

    ::zserio::IPubSubClient::SubscriptionId subscribeInt32ValueIn(
            const std::function<void(const std::string& topic, const ::pubsub_poc::Int32Value& object)>& callback,
            void* context = nullptr);
    void unsubscribeInt32ValueIn(zserio::IPubSubClient::SubscriptionId id);

    ::zserio::IPubSubClient::SubscriptionId subscribeBoolValue(
            const std::function<void(const std::string& topic, const ::pubsub_poc::BoolValue& object)>& callback,
            void* context = nullptr);
    void unsubscribeBoolValue(zserio::IPubSubClient::SubscriptionId id);

private:
    void onRawInt32ValueIn(const std::string& topic, const std::vector<uint8_t>& data) const;
    void onRawBoolValue(const std::string& topic, const std::vector<uint8_t>& data) const;

    template<typename ZSERIO_OBJECT>
    void publishZserioObject(ZSERIO_OBJECT& object, const std::string& topic, void* context) const;

    zserio::IPubSubClient& m_pubSubClient;

    std::map<::zserio::IPubSubClient::SubscriptionId,
            std::function<void(const std::string& topic, const ::pubsub_poc::Int32Value& object)>> m_subscribersInt32Value;
    std::map<::zserio::IPubSubClient::SubscriptionId,
            std::function<void(const std::string& topic, const ::pubsub_poc::BoolValue& object)>> m_subscribersBoolValue;
};

} // namespace pubsub_poc

#endif // ifndef SIMPLE_PUB_SUB_H
