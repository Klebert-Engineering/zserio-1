/**
 * Automatically generated by Zserio C++ extension version 1.2.0.
 */

#ifndef ARRAY_H
#define ARRAY_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <zserio/BitFieldArray.h>
#include <zserio/Types.h>

class Array
{
public:
    Array();
    Array(zserio::BitStreamReader& in,
            uint32_t _size);

    Array(const Array& other);
    Array& operator=(const Array& other);

    // new in cpp11
    Array(uint32_t _size, const std::vector<int32_t>& _values);
    Array(uint32_t _size, std::vector<int32_t>&& _values);
    Array(Array&& other) = default;
    Array& operator=(Array&& other) = default;

    void initialize(
            uint32_t size);

    uint32_t getSize() const;

    std::vector<int32_t>& getValues();
    const std::vector<int32_t>& getValues() const;
    void setValues(const std::vector<int32_t>& _values);
    void setValues(std::vector<int32_t>&& _values);

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t initializeOffsets(size_t bitPosition);

    bool operator==(const Array& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& in);
    void write(zserio::BitStreamWriter& out,
            zserio::PreWriteAction preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:
    uint32_t m_size;
    bool m_isInitialized;
    std::vector<int32_t> m_values;
};

#endif // ARRAY_H
