/**
 * Automatically generated by Zserio C++ extension version 1.2.0.
 */

#include "Color.h"

#include "zserio/CppRuntimeException.h"
#include "zserio/StringConvertUtil.h"

// This is full specialization for Color enumeration.
namespace zserio
{

std::string EnumUtil<enumeration_types::bitfield_enum::Color>::toString(
        enumeration_types::bitfield_enum::Color value)
{
    switch (value)
    {
    case enumeration_types::bitfield_enum::Color::NONE:
        return std::string("NONE");
    case enumeration_types::bitfield_enum::Color::RED:
        return std::string("RED");
    case enumeration_types::bitfield_enum::Color::BLUE:
        return std::string("BLUE");
    case enumeration_types::bitfield_enum::Color::BLACK:
        return std::string("BLACK");
    default:
        return std::string("UNKNOWN");
    }
}

enumeration_types::bitfield_enum::Color EnumUtil<enumeration_types::bitfield_enum::Color>::toEnum(uint8_t value)
{
    switch (value)
    {
    case UINT8_C(0):
        return enumeration_types::bitfield_enum::Color::NONE;
    case UINT8_C(2):
        return enumeration_types::bitfield_enum::Color::RED;
    case UINT8_C(3):
        return enumeration_types::bitfield_enum::Color::BLUE;
    case UINT8_C(7):
        return enumeration_types::bitfield_enum::Color::BLACK;
    default:
        throw zserio::CppRuntimeException("Unknown value for enumeration Color: " +
                zserio::convertToString(value) + "!");
    }
}

std::vector<enumeration_types::bitfield_enum::Color> EnumUtil<enumeration_types::bitfield_enum::Color>::getValues()
{
    return std::vector<enumeration_types::bitfield_enum::Color>{
        {enumeration_types::bitfield_enum::Color::NONE,
        enumeration_types::bitfield_enum::Color::RED,
        enumeration_types::bitfield_enum::Color::BLUE,
        enumeration_types::bitfield_enum::Color::BLACK} };
}

} // namespace zserio
