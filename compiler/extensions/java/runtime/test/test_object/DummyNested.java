/**
 * Automatically generated by Zserio Java extension version 2.9.0-pre1.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, typeInfoCode.
 */

package test_object;

@SuppressWarnings("cast")
public class DummyNested implements zserio.runtime.io.Writer, zserio.runtime.SizeOf
{
    public DummyNested(
            long param_)
    {
        this.param_ = param_;
    }

    public DummyNested(java.io.File file,
            long param_)
            throws java.io.IOException
    {
        this.param_ = param_;

        try (final zserio.runtime.io.FileBitStreamReader in = new zserio.runtime.io.FileBitStreamReader(file))
        {
            read(in);
        }
    }

    public DummyNested(zserio.runtime.io.BitStreamReader in,
            long param_)
            throws java.io.IOException
    {
        this.param_ = param_;

        read(in);
    }

    public DummyNested(zserio.runtime.array.PackingContextNode contextNode, zserio.runtime.io.BitStreamReader in,
            long param_)
            throws java.io.IOException
    {
        this.param_ = param_;

        read(contextNode, in);
    }

    public DummyNested(
            long param_,
            long value_,
            java.lang.String text_,
            zserio.runtime.io.BitBuffer externData_,
            byte[] bytesData_,
            test_object.DummyEnum dummyEnum_,
            test_object.DummyBitmask dummyBitmask_)
    {
        this(param_);

        setValue(value_);
        setText(text_);
        setExternData(externData_);
        setBytesData(bytesData_);
        setDummyEnum(dummyEnum_);
        setDummyBitmask(dummyBitmask_);
    }

    public static zserio.runtime.typeinfo.TypeInfo typeInfo()
    {
        final java.lang.String templateName = "";
        final java.util.List<zserio.runtime.typeinfo.TypeInfo> templateArguments =
                new java.util.ArrayList<zserio.runtime.typeinfo.TypeInfo>();
        final java.util.List<zserio.runtime.typeinfo.FieldInfo> fieldList =
                java.util.Arrays.asList(
                        new zserio.runtime.typeinfo.FieldInfo(
                                "value", // schemaName
                                "getValue", // getterName
                                "setValue", // setterName
                                zserio.runtime.typeinfo.TypeInfo.BuiltinTypeInfo.getUInt32(), // typeInfo
                                new java.util.ArrayList<java.util.function.BiFunction<java.lang.Object, java.lang.Integer, java.lang.Object>>(), // typeArguments
                                null, // alignment
                                null, // offset
                                null, // initializer
                                false, // isOptional
                                null, // optionalCondition
                                "", // isUsedIndicatorName
                                "", // isSetIndicatorName
                                null, // constraint
                                false, // isArray
                                null, // arrayLength
                                false, // isPacked
                                false // isImplicit
                        ),
                        new zserio.runtime.typeinfo.FieldInfo(
                                "text", // schemaName
                                "getText", // getterName
                                "setText", // setterName
                                zserio.runtime.typeinfo.TypeInfo.BuiltinTypeInfo.getString(), // typeInfo
                                new java.util.ArrayList<java.util.function.BiFunction<java.lang.Object, java.lang.Integer, java.lang.Object>>(), // typeArguments
                                null, // alignment
                                null, // offset
                                null, // initializer
                                false, // isOptional
                                null, // optionalCondition
                                "", // isUsedIndicatorName
                                "", // isSetIndicatorName
                                null, // constraint
                                false, // isArray
                                null, // arrayLength
                                false, // isPacked
                                false // isImplicit
                        ),
                        new zserio.runtime.typeinfo.FieldInfo(
                                "externData", // schemaName
                                "getExternData", // getterName
                                "setExternData", // setterName
                                zserio.runtime.typeinfo.TypeInfo.BuiltinTypeInfo.getBitBuffer(), // typeInfo
                                new java.util.ArrayList<java.util.function.BiFunction<java.lang.Object, java.lang.Integer, java.lang.Object>>(), // typeArguments
                                null, // alignment
                                null, // offset
                                null, // initializer
                                false, // isOptional
                                null, // optionalCondition
                                "", // isUsedIndicatorName
                                "", // isSetIndicatorName
                                null, // constraint
                                false, // isArray
                                null, // arrayLength
                                false, // isPacked
                                false // isImplicit
                        ),
                        new zserio.runtime.typeinfo.FieldInfo(
                                "bytesData", // schemaName
                                "getBytesData", // getterName
                                "setBytesData", // setterName
                                zserio.runtime.typeinfo.TypeInfo.BuiltinTypeInfo.getBytes(), // typeInfo
                                new java.util.ArrayList<java.util.function.BiFunction<java.lang.Object, java.lang.Integer, java.lang.Object>>(), // typeArguments
                                null, // alignment
                                null, // offset
                                null, // initializer
                                false, // isOptional
                                null, // optionalCondition
                                "", // isUsedIndicatorName
                                "", // isSetIndicatorName
                                null, // constraint
                                false, // isArray
                                null, // arrayLength
                                false, // isPacked
                                false // isImplicit
                        ),
                        new zserio.runtime.typeinfo.FieldInfo(
                                "dummyEnum", // schemaName
                                "getDummyEnum", // getterName
                                "setDummyEnum", // setterName
                                test_object.DummyEnum.typeInfo(), // typeInfo
                                new java.util.ArrayList<java.util.function.BiFunction<java.lang.Object, java.lang.Integer, java.lang.Object>>(), // typeArguments
                                null, // alignment
                                null, // offset
                                null, // initializer
                                false, // isOptional
                                null, // optionalCondition
                                "", // isUsedIndicatorName
                                "", // isSetIndicatorName
                                null, // constraint
                                false, // isArray
                                null, // arrayLength
                                false, // isPacked
                                false // isImplicit
                        ),
                        new zserio.runtime.typeinfo.FieldInfo(
                                "dummyBitmask", // schemaName
                                "getDummyBitmask", // getterName
                                "setDummyBitmask", // setterName
                                test_object.DummyBitmask.typeInfo(), // typeInfo
                                new java.util.ArrayList<java.util.function.BiFunction<java.lang.Object, java.lang.Integer, java.lang.Object>>(), // typeArguments
                                null, // alignment
                                null, // offset
                                null, // initializer
                                false, // isOptional
                                null, // optionalCondition
                                "", // isUsedIndicatorName
                                "", // isSetIndicatorName
                                null, // constraint
                                false, // isArray
                                null, // arrayLength
                                false, // isPacked
                                false // isImplicit
                        )
                );
        final java.util.List<zserio.runtime.typeinfo.ParameterInfo> parameterList =
                java.util.Arrays.asList(
                        new zserio.runtime.typeinfo.ParameterInfo(
                                "param", // schemaName
                                zserio.runtime.typeinfo.TypeInfo.BuiltinTypeInfo.getUInt32() // typeInfo
                        )
                );
        final java.util.List<zserio.runtime.typeinfo.FunctionInfo> functionList =
                new java.util.ArrayList<zserio.runtime.typeinfo.FunctionInfo>();

        return new zserio.runtime.typeinfo.TypeInfo.StructTypeInfo(
                "test_object.DummyNested", DummyNested.class, templateName, templateArguments,
                fieldList, parameterList, functionList
        );
    }

    public static void createPackingContext(zserio.runtime.array.PackingContextNode contextNode)
    {
        contextNode.createChild().createContext();
        contextNode.createChild();
        contextNode.createChild();
        contextNode.createChild();
        test_object.DummyEnum.createPackingContext(contextNode.createChild());
        test_object.DummyBitmask.createPackingContext(contextNode.createChild());
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContextNode contextNode)
    {
        contextNode.getChildren().get(0).getContext().init(
                new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(value_));
        dummyEnum_.initPackingContext(contextNode.getChildren().get(4));
        dummyBitmask_.initPackingContext(contextNode.getChildren().get(5));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 32;
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(text_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(externData_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBytes(bytesData_);
        endBitPosition += dummyEnum_.bitSizeOf(endBitPosition);
        endBitPosition += dummyBitmask_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContextNode contextNode, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += contextNode.getChildren().get(0).getContext().bitSizeOf(
                new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(value_));
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(text_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(externData_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBytes(bytesData_);
        endBitPosition += dummyEnum_.bitSizeOf(contextNode.getChildren().get(4),
                endBitPosition);
        endBitPosition += dummyBitmask_.bitSizeOf(contextNode.getChildren().get(5),
                endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public long getParam()
    {
        return this.param_;
    }

    public long getValue()
    {
        return value_;
    }

    public void setValue(long value_)
    {
        this.value_ = value_;
    }

    public java.lang.String getText()
    {
        return text_;
    }

    public void setText(java.lang.String text_)
    {
        this.text_ = text_;
    }

    public zserio.runtime.io.BitBuffer getExternData()
    {
        return externData_;
    }

    public void setExternData(zserio.runtime.io.BitBuffer externData_)
    {
        this.externData_ = externData_;
    }

    public byte[] getBytesData()
    {
        return bytesData_;
    }

    public void setBytesData(byte[] bytesData_)
    {
        this.bytesData_ = bytesData_;
    }

    public test_object.DummyEnum getDummyEnum()
    {
        return dummyEnum_;
    }

    public void setDummyEnum(test_object.DummyEnum dummyEnum_)
    {
        this.dummyEnum_ = dummyEnum_;
    }

    public test_object.DummyBitmask getDummyBitmask()
    {
        return dummyBitmask_;
    }

    public void setDummyBitmask(test_object.DummyBitmask dummyBitmask_)
    {
        this.dummyBitmask_ = dummyBitmask_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof DummyNested)
        {
            final DummyNested that = (DummyNested)obj;

            return
                    this.param_ == that.param_ &&
                    value_ == that.value_ &&
                    ((text_ == null) ? that.text_ == null : text_.equals(that.text_)) &&
                    ((externData_ == null) ? that.externData_ == null : externData_.equals(that.externData_)) &&
                    ((bytesData_ == null) ? that.bytesData_ == null : java.util.Arrays.equals(bytesData_, that.bytesData_)) &&
                    ((dummyEnum_ == null) ? that.dummyEnum_ == null : dummyEnum_.getValue() == that.dummyEnum_.getValue()) &&
                    ((dummyBitmask_ == null) ? that.dummyBitmask_ == null : dummyBitmask_.equals(that.dummyBitmask_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getParam());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, value_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, text_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, externData_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, bytesData_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, dummyEnum_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, dummyBitmask_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        value_ = in.readUnsignedInt();

        text_ = in.readString();

        externData_ = in.readBitBuffer();

        bytesData_ = in.readBytes();

        dummyEnum_ = test_object.DummyEnum.readEnum(in);

        dummyBitmask_ = new test_object.DummyBitmask(in);
    }

    public void read(zserio.runtime.array.PackingContextNode contextNode, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        value_ = ((zserio.runtime.array.ArrayElement.LongArrayElement)
                contextNode.getChildren().get(0).getContext().read(
                        new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)), in)).get();

        text_ = in.readString();

        externData_ = in.readBitBuffer();

        bytesData_ = in.readBytes();

        dummyEnum_ = test_object.DummyEnum.readEnum(contextNode.getChildren().get(4), in);

        dummyBitmask_ = new test_object.DummyBitmask(contextNode.getChildren().get(5), in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 32;
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(text_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(externData_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBytes(bytesData_);
        endBitPosition += dummyEnum_.bitSizeOf(endBitPosition);
        endBitPosition += dummyBitmask_.bitSizeOf(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContextNode contextNode, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += contextNode.getChildren().get(0).getContext().bitSizeOf(
                new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(value_));
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(text_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(externData_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBytes(bytesData_);
        endBitPosition = dummyEnum_.initializeOffsets(contextNode.getChildren().get(4),
                endBitPosition);
        endBitPosition = dummyBitmask_.initializeOffsets(contextNode.getChildren().get(5),
                endBitPosition);

        return endBitPosition;
    }

    public void write(java.io.File file) throws java.io.IOException
    {
        try (final zserio.runtime.io.FileBitStreamWriter out = new zserio.runtime.io.FileBitStreamWriter(file))
        {
            write(out);
        }
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedInt(value_);

        out.writeString(text_);

        out.writeBitBuffer(externData_);

        out.writeBytes(bytesData_);

        dummyEnum_.write(out);

        dummyBitmask_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContextNode contextNode,
            zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        contextNode.getChildren().get(0).getContext().write(
                new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)), out,
                new zserio.runtime.array.ArrayElement.LongArrayElement(value_));

        out.writeString(text_);

        out.writeBitBuffer(externData_);

        out.writeBytes(bytesData_);

        dummyEnum_.write(contextNode.getChildren().get(4), out);

        dummyBitmask_.write(contextNode.getChildren().get(5), out);
    }

    private final long param_;
    private long value_;
    private java.lang.String text_;
    private zserio.runtime.io.BitBuffer externData_;
    private byte[] bytesData_;
    private test_object.DummyEnum dummyEnum_;
    private test_object.DummyBitmask dummyBitmask_;
}
