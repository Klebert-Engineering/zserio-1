/**
 * Automatically generated by Zserio Java extension version 1.4.0-pre2.
 */

package service_poc;

import javax.annotation.Generated;
import java.io.IOException;
import java.io.File;
import zserio.runtime.SizeOf;
import zserio.runtime.io.BitStreamReader;
import zserio.runtime.io.FileBitStreamReader;
import zserio.runtime.ZserioError;
import zserio.runtime.Util;
import zserio.runtime.io.BitStreamWriter;
import zserio.runtime.io.FileBitStreamWriter;
import zserio.runtime.io.InitializeOffsetsWriter;

@Generated(
    value = "zserio.tools.ZserioTool",
    comments = "generated by Zserio Java extension version 1.4.0-pre2"
)
public class Response implements InitializeOffsetsWriter, SizeOf
{
    public Response()
    {
    }

    public Response(File __file) throws IOException, ZserioError
    {
        final FileBitStreamReader __in = new FileBitStreamReader(__file);
        read(__in);
        __in.close();
    }

    public Response(BitStreamReader __in) throws IOException, ZserioError
    {
        read(__in);
    }

    public Response(
        java.math.BigInteger value)
    {
        setValue(value);
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long __bitPosition)
    {
        long __endBitPosition = __bitPosition;

        __endBitPosition += 64;

        return (int)(__endBitPosition - __bitPosition);
    }

    public java.math.BigInteger getValue()
    {
        return this.value;
    }

    public void setValue(java.math.BigInteger value)
    {
        this.value = value;
    }

    @Override
    public boolean equals(Object obj)
    {
        if (obj instanceof Response)
        {
            final Response __that = (Response)obj;

            return
                    ((this.value == null) ? __that.value == null : this.value.equals(__that.value));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int __result = Util.HASH_SEED;

        __result = Util.HASH_PRIME_NUMBER * __result + ((value == null) ? 0 : value.hashCode());

        return __result;
    }

    public void read(final BitStreamReader __in) throws IOException, ZserioError
    {
        value = __in.readBigInteger(64);
    }

    public long initializeOffsets(long __bitPosition)
    {
        long __endBitPosition = __bitPosition;

        __endBitPosition += 64;

        return __endBitPosition;
    }

    public void write(File __file) throws IOException, ZserioError
    {
        FileBitStreamWriter __out = new FileBitStreamWriter(__file);
        write(__out);
        __out.close();
    }

    @Override
    public void write(BitStreamWriter __out) throws IOException, ZserioError
    {
        write(__out, true);
    }

    @Override
    public void write(BitStreamWriter __out, boolean __callInitializeOffsets) throws IOException, ZserioError
    {
        __out.writeBigInteger(getValue(), 64);
    }

    private java.math.BigInteger value;
}
