/**
 * Automatically generated by Zserio Java extension version 1.2.0.
 */

import javax.annotation.Generated;
import java.io.IOException;
import java.io.File;
import zserio.runtime.SizeOf;
import zserio.runtime.io.BitStreamReader;
import zserio.runtime.io.FileBitStreamReader;
import zserio.runtime.ZserioError;
import zserio.runtime.Util;
import zserio.runtime.io.BitStreamWriter;
import zserio.runtime.io.FileBitStreamWriter;
import zserio.runtime.io.InitializeOffsetsWriter;
import zserio.runtime.GenericParameter;

@Generated(
    value = "zserio.tools.ZserioTool",
    comments = "generated by Zserio Java extension version 1.2.0"
)
public class Element<ZSERIO_PARAM_TYPE extends GenericParameter, ZSERIO_PARAM_VALUE extends GenericParameter> implements InitializeOffsetsWriter, SizeOf
{
    public Element(
            ZSERIO_PARAM_TYPE type)
    {
        this.type = type;
    }

    public Element(File __file,
            Class<ZSERIO_PARAM_VALUE> __valueClazz,
            ZSERIO_PARAM_TYPE __type) throws IOException, ZserioError, Exception
    {
        this.type = __type;

        final FileBitStreamReader __in = new FileBitStreamReader(__file);
        read(__in, __valueClazz);
        __in.close();
    }

    public Element(BitStreamReader __in,
            Class<ZSERIO_PARAM_VALUE> __valueClazz,
            ZSERIO_PARAM_TYPE __type) throws IOException, ZserioError, Exception
    {
        this.type = __type;

        read(__in, __valueClazz);
    }

    public Element(
            ZSERIO_PARAM_TYPE type,
            ZSERIO_PARAM_VALUE value)
    {
        this(type);
        setValue(value);
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long __bitPosition)
    {
        long __endBitPosition = __bitPosition;

        __endBitPosition += getValue().bitSizeOf(__endBitPosition);

        return (int)(__endBitPosition - __bitPosition);
    }

    public ZSERIO_PARAM_TYPE getType()
    {
        return this.type;
    }

    public ZSERIO_PARAM_VALUE getValue()
    {
        return this.value;
    }

    public void setValue(ZSERIO_PARAM_VALUE value)
    {
        this.value = value;
    }

    @Override
    public boolean equals(Object obj)
    {
        if (obj instanceof Element)
        {
            final Element __that = (Element)obj;

            return
                    ((this.type == null) ? __that.type == null : this.type == __that.type) &&
                    ((this.value == null) ? __that.value == null : this.value.equals(__that.value));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int __result = Util.HASH_SEED;

        __result = Util.HASH_PRIME_NUMBER * __result + ((type == null) ? 0 : type.hashCode());
        __result = Util.HASH_PRIME_NUMBER * __result + ((value == null) ? 0 : value.hashCode());

        return __result;
    }

    public void read(final BitStreamReader __in, Class<ZSERIO_PARAM_VALUE> __valueClazz) throws IOException, ZserioError, Exception
    {
        value = __valueClazz.getDeclaredConstructor(type.getClass()).newInstance(type);
        value.read(__in);
    }

    public long initializeOffsets(long __bitPosition)
    {
        long __endBitPosition = __bitPosition;

        __endBitPosition = getValue().initializeOffsets(__endBitPosition);

        return __endBitPosition;
    }

    public void write(File __file) throws IOException, ZserioError
    {
        FileBitStreamWriter __out = new FileBitStreamWriter(__file);
        write(__out);
        __out.close();
    }

    @Override
    public void write(BitStreamWriter __out) throws IOException, ZserioError
    {
        write(__out);
    }

    @Override
    public void write(BitStreamWriter __out, boolean __callInitializeOffsets) throws IOException, ZserioError
    {
        getValue().write(__out);
    }

    private final ZSERIO_PARAM_TYPE type;
    private ZSERIO_PARAM_VALUE value;
}
