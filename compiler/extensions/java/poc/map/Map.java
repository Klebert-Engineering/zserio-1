/**
 * Automatically generated by Zserio Java extension version 1.2.0.
 */

import javax.annotation.Generated;
import java.io.IOException;
import java.io.File;
import zserio.runtime.SizeOf;
import zserio.runtime.io.BitStreamReader;
import zserio.runtime.io.FileBitStreamReader;
import zserio.runtime.ZserioError;
import zserio.runtime.Util;
import zserio.runtime.io.BitStreamWriter;
import zserio.runtime.io.FileBitStreamWriter;
import zserio.runtime.io.InitializeOffsetsWriter;
import zserio.runtime.GenericParameter;

@Generated(
    value = "zserio.tools.ZserioTool",
    comments = "generated by Zserio Java extension version 1.2.0"
)
public class Map<ZSERIO_PARAM_TYPE extends GenericParameter, ZSERIO_PARAM_VALUE extends GenericParameter> implements InitializeOffsetsWriter, SizeOf
{
    public Map(Class<ZSERIO_PARAM_VALUE> __valueClazz)
    {
        this.valueClazz = __valueClazz;
    }

    public Map(File __file, Class<ZSERIO_PARAM_VALUE> __valueClazz, Class<ZSERIO_PARAM_TYPE> __typeClazz) throws IOException, ZserioError, Exception
    {
        this.valueClazz = __valueClazz;
        final FileBitStreamReader __in = new FileBitStreamReader(__file);
        read(__in, __typeClazz);
        __in.close();
    }

    public Map(BitStreamReader __in, Class<ZSERIO_PARAM_VALUE> __valueClazz, Class<ZSERIO_PARAM_TYPE> __typeClazz) throws IOException, ZserioError, Exception
    {
        this.valueClazz = __valueClazz;
        read(__in, __typeClazz);
    }

    public Map(
        Class<ZSERIO_PARAM_VALUE> __valueClazz,
        ZSERIO_PARAM_TYPE type,
        zserio.runtime.array.ObjectArray<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> > valueList)
    {
        this.valueClazz = __valueClazz;
        setType(type);
        setValueList(valueList);
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long __bitPosition)
    {
        long __endBitPosition = __bitPosition;

        __endBitPosition += getType().bitSizeOf(__endBitPosition);
        __endBitPosition += getValueList().bitSizeOfAuto(__endBitPosition);

        return (int)(__endBitPosition - __bitPosition);
    }

    public ZSERIO_PARAM_TYPE getType()
    {
        return this.type;
    }

    public void setType(ZSERIO_PARAM_TYPE type)
    {
        this.type = type;
    }

    public zserio.runtime.array.ObjectArray<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> > getValueList()
    {
        return this.valueList;
    }

    public void setValueList(zserio.runtime.array.ObjectArray<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> > valueList)
    {
        this.valueList = valueList;
    }

    public void setValueList(java.util.List<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> > valueList)
    {
        this.valueList = new zserio.runtime.array.ObjectArray<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> >(valueList);
    }

    @Override
    public boolean equals(Object obj)
    {
        if (obj instanceof Map)
        {
            final Map __that = (Map)obj;

            return
                    ((this.type == null) ? __that.type == null : this.type == __that.type) &&
                    ((this.valueList == null) ? __that.valueList == null : this.valueList.equals(__that.valueList));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int __result = Util.HASH_SEED;

        __result = Util.HASH_PRIME_NUMBER * __result + ((type == null) ? 0 : type.hashCode());
        __result = Util.HASH_PRIME_NUMBER * __result + ((valueList == null) ? 0 : valueList.hashCode());

        return __result;
    }

    public void read(final BitStreamReader __in, Class<ZSERIO_PARAM_TYPE> __typeClazz) throws IOException, ZserioError, Exception
    {
        type = __typeClazz.newInstance();
        type.read(__in);

        valueList = new zserio.runtime.array.ObjectArray<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> >(__in, zserio.runtime.array.Array.AUTO_LENGTH,
            new __ElementFactory_valueList());
    }

    public long initializeOffsets(long __bitPosition)
    {
        long __endBitPosition = __bitPosition;

        __endBitPosition = getType().initializeOffsets(__endBitPosition);
        __endBitPosition = getValueList().initializeOffsetsAuto(__endBitPosition);

        return __endBitPosition;
    }

    public void write(File __file) throws IOException, ZserioError
    {
        FileBitStreamWriter __out = new FileBitStreamWriter(__file);
        write(__out);
        __out.close();
    }

    @Override
    public void write(BitStreamWriter __out) throws IOException, ZserioError
    {
        write(__out, true);
    }

    @Override
    public void write(BitStreamWriter __out, boolean __callInitializeOffsets) throws IOException, ZserioError
    {
        getType().write(__out);

        getValueList().writeAuto(__out);
    }

    private final class __ElementFactory_valueList implements zserio.runtime.array.ElementFactory<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> >
    {
        @Override
        public Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> create(BitStreamReader __in, int __index)
            throws IOException, ZserioError, Exception
        {
            return new Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE>(__in, valueClazz, getType());
        }
    }

    private final Class<ZSERIO_PARAM_VALUE> valueClazz;
    private ZSERIO_PARAM_TYPE type;
    private zserio.runtime.array.ObjectArray<Element<ZSERIO_PARAM_TYPE, ZSERIO_PARAM_VALUE> > valueList;
}
