import zserio
import service_poc.Request
import service_poc.Response

class SimpleService:
    """ Generated by Zserio. """

    class Service:
        """ Abstract class to providing generic service. """

        def __init__(self):
            self._procedureMap = {
                "SimpleService.powerOfTwo": self._powerOfTwoCall,
                "SimpleService.powerOfFour": self._powerOfFourCall,
            }

        def callProcedure(self, procName, requestData):
            return self._procedureMap[procName](requestData)

        def _powerOfTwoImpl(self, request):
            """ Abstract method to be implemented by user in a concrete implementation. """
            return None # TODO: exception!
    
        def _powerOfFourImpl(self, request):
            """ Abstract method to be implemented by user in a concrete implementation. """
            return None # TODO: exception!

        def _powerOfTwoCall(self, requestData):
            """ Deserialize, call, serialize - generated by Zserio. """
            reader = zserio.BitStreamReader(requestData)
            request = service_poc.Request.Request.fromReader(reader)
            
            response = self._powerOfTwoImpl(request)

            writer = zserio.BitStreamWriter()
            response.write(writer)
            return writer.getByteArray()

        def _powerOfFourCall(self, requestData):
            """ Deserialize, call, serialize - generated by Zserio. """
            reader = zserio.BitStreamReader(requestData)
            request = service_poc.Request.Request.fromReader(reader)
            
            response = self._powerOfFourImpl(request)

            writer = zserio.BitStreamWriter()
            response.write(writer)
            return writer.getByteArray()

    class Client:
        """ Generated by Zserio. """

        def __init__(self, service):
            self._service = service

        def callPowerOfTwo(self, request):
            writer = zserio.BitStreamWriter()
            request.write(writer)
            requestData = writer.getByteArray()

            responseData = self._service.callProcedure("SimpleService.powerOfTwo", requestData)
            
            reader = zserio.BitStreamReader(responseData)
            response = service_poc.Response.Response.fromReader(reader)
            return response

        def callPowerOfFour(self, request):
            writer = zserio.BitStreamWriter()
            request.write(writer)
            requestData = writer.getByteArray()

            responseData = self._service.callProcedure("SimpleService.powerOfFour", requestData)

            reader = zserio.BitStreamReader(responseData)
            response = service_poc.Response.Response.fromReader(reader)
            return response
