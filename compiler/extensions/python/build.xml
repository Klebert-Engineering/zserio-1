<!--

Ant build.xml for Zserio Python Extension.

Zserio Python Extension is implemented as Java service which can be dynamically loaded by Zserio core during
runtime. It generates Python API.

The following external properties can be set:

zserio_extensions.build_dir   - Zserio extensions build directory.
                                Default is "../../../build/compiler/extensions".
zserio_extensions.install_dir - Zserio extensions install directory.
                                Default is "../../../distr/zserio_libs".
zserio_python.build_dir       - Directory where to put generated files.
                                Default is "${zserio_extensions.build_dir}/python".
zserio_python.install_dir     - Directory where to install Zserio Python Extension jar file.
                                Default is "${zserio_extensions.install_dir}".
zserio_core.jar_file          - Zserio core jar file used for classpath.
                                Default is "${zserio_extensions.build_dir}/../core/jar/zserio_core.jar".
spotbugs.home_dir             - Location of the spotbugs tool. If not set, spotbugs is not run.

-->
<project name="zserio_python" basedir="." default="jar">
    <dirname property="zserio_python.base_dir" file="${ant.file.zserio_python}"/>

    <property name="zserio_python.zserio_root" value="${zserio_python.base_dir}/../../.."/>

    <property name="zserio_extensions.build_dir"
            value="${zserio_python.zserio_root}/build/compiler/extensions"/>
    <property name="zserio_extensions.install_dir" value="${zserio_python.zserio_root}/distr/zserio_libs"/>
    <property name="zserio_python.build_dir" value="${zserio_extensions.build_dir}/python"/>
    <property name="zserio_python.install_dir" value="${zserio_extensions.install_dir}"/>
    <property name="zserio_core.jar_file" value="${zserio_extensions.build_dir}/../core/jar/zserio_core.jar"/>

    <property name="zserio_python.src_dir" value="${zserio_python.base_dir}/src"/>
    <property name="zserio_python.classes_dir" value="${zserio_python.build_dir}/classes"/>
    <property name="zserio_python.javadocs_dir" value="${zserio_python.build_dir}/javadocs"/>
    <property name="zserio_python.spotbugs.out_dir" value="${zserio_python.build_dir}/spotbugs"/>

    <property name="zserio_python.test.src_dir" location="${zserio_python.base_dir}/test"/>
    <property name="zserio_python.test.build_dir" value="${zserio_python.build_dir}/test"/>
    <property name="zserio_python.test.classes_dir" value="${zserio_python.test.build_dir}/classes"/>
    <property name="zserio_python.test.spotbugs.out_dir" value="${zserio_python.test.build_dir}/spotbugs"/>
    <property name="zserio_python.test.results_dir" value="${zserio_python.test.build_dir}/results"/>

    <property name="zserio_python.jar_dir" value="${zserio_python.build_dir}/jar"/>
    <property name="zserio_python.jar_file" value="${zserio_python.jar_dir}/zserio_python.jar"/>
    <property name="zserio_python.javadocs_jar_file"
            value="${zserio_python.jar_dir}/zserio_python_javadocs.jar"/>
    <property name="zserio_python.sources_jar_file" value="${zserio_python.jar_dir}/zserio_python_sources.jar"/>

    <property name="3rdparty.root_dir" value="${zserio_python.zserio_root}/3rdparty"/>
    <property name="3rdparty.jar_dir" value="${3rdparty.root_dir}/java"/>
    <property name="3rdparty.junit.jar_file"
        value="${3rdparty.jar_dir}/junit-platform-console-standalone-1.8.2.jar"/>

    <!-- Zserio Python extension version. -->
    <loadfile
        encoding="UTF-8"
        property="zserio_python.version"
        srcFile="${basedir}/src/zserio/extension/python/PythonExtensionVersion.java">
        <filterchain>
            <striplinebreaks/>
            <tokenfilter>
                <replaceregex
                    pattern='.*PYTHON_EXTENSION_VERSION_STRING\s*=\s*"([0-9]+.[0-9]+.[0-9]+(-[A-Za-z0-9]+)?)".*'
                    replace="\1"/>
            </tokenfilter>
        </filterchain>
    </loadfile>

    <uptodate property="zserio_python.javadocs_up_to_date">
        <srcfiles dir= "${zserio_python.src_dir}" includes="**/*"/>
        <srcfiles file="build.xml"/>
        <mapper type="merge" to="${zserio_python.javadocs_dir}/index.html"/>
    </uptodate>

    <target name="clean">
        <delete dir="${zserio_python.build_dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${zserio_python.classes_dir}"/>
        <depend srcDir="${zserio_python.src_dir}" destDir="${zserio_python.classes_dir}"
            cache="${zserio_python.build_dir}/depend-cache"/>

        <path id="zserio_python.classpath_zserio_core">
            <pathelement location="${zserio_core.jar_file}"/>
        </path>

        <javac srcdir="${zserio_python.src_dir}" destdir="${zserio_python.classes_dir}" debug="on"
            encoding="utf8" includeAntRuntime="false">
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Werror"/>
            <classpath>
                <path refid="zserio_python.classpath_zserio_core"/>
            </classpath>
        </javac>
    </target>

    <target name="javadocs" unless="zserio_python.javadocs_up_to_date">
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
        </tstamp>
        <javadoc destdir="${zserio_python.javadocs_dir}" failonerror="true" failonwarning="true">
            <fileset dir="${zserio_python.src_dir}"/>
            <doctitle>
                <![CDATA[<h1>Zserio Python Extension Documentation</h1>
                <h2>Version ${zserio_python.version}</h2]]>
            </doctitle>
            <bottom>
                <![CDATA[<i>Last updated ${timestamp}</i>]]>
            </bottom>
            <classpath>
                <path refid="zserio_python.classpath_zserio_core"/>
            </classpath>
        </javadoc>
    </target>

    <target name="jar" depends="compile, javadocs">
        <mkdir dir="${zserio_python.jar_dir}"/>
        <copy todir="${zserio_python.build_dir}/metainf" overwrite="true">
            <fileset dir="${zserio_python.base_dir}/metainf"/>
        </copy>

        <jar destfile="${zserio_python.jar_file}">
            <fileset dir="${zserio_python.classes_dir}">
                <include name="zserio/**"/>
            </fileset>
            <zipfileset dir="${zserio_python.base_dir}/freemarker" includes="*.ftl"
                prefix="freemarker/python"/>
            <manifest>
                <attribute name="Implementation-Version" value="${zserio_python.version}"/>
            </manifest>
            <metainf dir="${zserio_python.build_dir}/metainf" includes="**/*"/>
        </jar>

        <jar destfile="${zserio_python.javadocs_jar_file}">
            <fileset dir="${zserio_python.javadocs_dir}">
                <include name="**"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Version" value="${zserio_python.version}"/>
            </manifest>
        </jar>

        <jar destfile="${zserio_python.sources_jar_file}">
            <fileset dir="${zserio_python.src_dir}"/>
            <manifest>
                <attribute name="Implementation-Version" value="${zserio_python.version}"/>
            </manifest>
        </jar>
    </target>

    <target name="install" depends="jar">
        <mkdir dir="${zserio_python.install_dir}"/>
        <copy todir="${zserio_python.install_dir}" overwrite="true">
            <fileset dir="${zserio_python.jar_dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="spotbugs" depends="install" if="spotbugs.home_dir">
        <mkdir dir="${zserio_python.spotbugs.out_dir}"/>
        <taskdef classpath="${spotbugs.home_dir}/lib/spotbugs-ant.jar"
            resource="edu/umd/cs/findbugs/anttask/tasks.properties"/>
        <spotbugs home="${spotbugs.home_dir}"
            output="html"
            outputFile="${zserio_python.spotbugs.out_dir}/spotbugs.html"
            reportLevel="low"
            errorProperty="zserio_python.is_failed"
            warningsProperty="zserio_python.is_failed">
            <sourcePath>
                <dirset dir="${zserio_python.src_dir}"/>
            </sourcePath>
            <fileset dir="${zserio_python.classes_dir}"/>
            <auxClasspath>
                <path refid="zserio_python.classpath_zserio_core"/>
            </auxClasspath>
        </spotbugs>
        <fail message="SpotBugs found some issues!" if="zserio_python.is_failed"/>
    </target>

    <target name="test.clean">
        <delete dir="${zserio_python.test.build_dir}"/>
    </target>

    <target name="test.compile" depends="jar">
        <mkdir dir="${zserio_python.test.classes_dir}"/>
        <depend srcDir="${zserio_python.test.src_dir}" destDir="${zserio_python.test.classes_dir}"
            cache="${zserio_python.test.build_dir}/depend-cache"/>
        <javac srcdir="${zserio_python.test.src_dir}" destdir="${zserio_python.test.classes_dir}" debug="on"
            encoding="utf8" includeAntRuntime="false">
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Werror"/>
            <classpath>
                <pathelement path="${3rdparty.junit.jar_file}"/>
                <pathelement path="${zserio_python.jar_file}"/>
            </classpath>
        </javac>
    </target>

    <target name="test.spotbugs" depends="spotbugs, test.compile" if="spotbugs.home_dir">
        <mkdir dir="${zserio_python.test.spotbugs.out_dir}"/>
        <taskdef classpath="${spotbugs.home_dir}/lib/spotbugs-ant.jar"
            resource="edu/umd/cs/findbugs/anttask/tasks.properties"/>
        <spotbugs home="${spotbugs.home_dir}"
            output="html"
            outputFile="${zserio_python.test.spotbugs.out_dir}/spotbugs.html"
            reportLevel="low"
            errorProperty="zserio_python.spotbugs.is_failed"
            warningsProperty="zserio_python.spotbugs.is_failed">
            <sourcePath>
                <dirset dir="${zserio_python.test.src_dir}"/>
            </sourcePath>
            <fileset dir="${zserio_python.test.classes_dir}"/>
            <class location="${zserio_python.jar_file}"/>
            <auxClasspath>
                <path refid="zserio_python.classpath_zserio_core"/>
                <fileset file="${3rdparty.junit.jar_file}"/>
            </auxClasspath>
        </spotbugs>
        <fail message="SpotBugs found some issues!" if="zserio_python.spotbugs.is_failed"/>
    </target>

    <target name="test.run" depends="test.spotbugs">
        <mkdir dir="${zserio_python.test.results_dir}"/>
        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true"
                dir="${zserio_python.test.build_dir}">
            <classpath>
                <pathelement path="${3rdparty.junit.jar_file}"/>
                <pathelement path="${zserio_python.jar_file}"/>
                <pathelement path="${zserio_python.test.classes_dir}"/>
            </classpath>
            <arg line="--disable-banner"/>
            <arg line="--scan-classpath"/>
            <arg line="--fail-if-no-tests"/>
            <arg line="--details tree"/>
            <arg line="--exclude-engine junit-vintage"/>
            <arg line="--reports-dir ${zserio_python.test.results_dir}"/>
        </java>
    </target>

    <target name="test" depends="test.run">
    </target>
</project>
